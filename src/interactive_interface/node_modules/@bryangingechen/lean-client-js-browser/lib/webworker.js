"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
}
Object.defineProperty(exports, "__esModule", { value: true });
const lean_client_js_core_1 = require("lean-client-js-core");
const webworkerscript_1 = __importDefault(require("./webworkerscript"));
class WebWorkerTransport {
    constructor(opts) {
        this.opts = opts;
    }
    connect() {
        const worker = new webworkerscript_1.default();
        worker.postMessage({
            command: 'start-webworker',
            opts: this.opts,
        });
        const conn = new WebWorkerConnection(worker);
        worker.onmessage = (e) => {
            const res = e.data;
            conn.jsonMessage.fire(res);
            // switch (res.response) {
            //     case 'error': {
            //         conn.error.fire(res as any);
            //         break;
            //     }
            //     default: conn.jsonMessage.fire(res);
            // }
        };
        return conn;
    }
}
exports.WebWorkerTransport = WebWorkerTransport;
class WebWorkerConnection {
    constructor(worker) {
        // TODO: type issue here; not all errors are TransportErrors
        // try e.g. server.info() with a missing file
        this.error = new lean_client_js_core_1.Event();
        this.jsonMessage = new lean_client_js_core_1.Event();
        this.alive = true;
        this.worker = worker;
    }
    send(msg) {
        this.worker.postMessage(msg);
    }
    dispose() {
        this.worker.terminate();
        this.alive = false;
    }
}
exports.WebWorkerConnection = WebWorkerConnection;
